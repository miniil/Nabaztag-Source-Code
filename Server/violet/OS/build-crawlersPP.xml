<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="Crawlers">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../eclipse_new/eclipse"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
	<path id="Crawlers.classpath">
        <pathelement location="build/WEB-INF/classes"/>
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
	</path>
    <target name="init">
        <mkdir dir="build/WEB-INF/classes"/>
        <copy includeemptydirs="false" todir="build/WEB-INF/classes">
            <fileset dir="." excludes="**/*.launch, **/*.testsuite, **/*.deploy, **/*.location, **/*.execution, **/*.datapool, **/*.artifact, **/*.html, **/*.svg, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="build/WEB-INF/classes">
            <fileset dir="test" excludes="**/*.launch, **/*.testsuite, **/*.deploy, **/*.location, **/*.execution, **/*.datapool, **/*.artifact, **/*.html, **/*.svg, **/*.java"/>
        </copy>
    </target>
    <target name="clean">
        <delete dir="build/WEB-INF/classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="build/WEB-INF/classes" source="${source}" target="${target}">
            <src path="."/>
            <exclude name=".classpath"/>
            <exclude name=".project"/>
            <exclude name="Copie de build.properties"/>
            <exclude name="Copie de build.xml"/>
            <exclude name="build.properties"/>
            <exclude name="build.xml"/>
            <exclude name="build/"/>
            <exclude name="classes/"/>
            <exclude name="classes/"/>
            <exclude name="classes/com/"/>
            <exclude name="classes/com/maxmind/"/>
            <exclude name="classes/com/maxmind/geoip/"/>
            <exclude name="test/"/>
            <classpath refid="Crawlers.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="build/WEB-INF/classes" source="${source}" target="${target}">
            <src path="test"/>
            <classpath refid="Crawlers.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="CrawlerCtl">
        <java classname="net.violet.platform.daemons.shell.CrawlerCtl" failonerror="true" fork="yes">
            <sysproperty key="log4j.configuration" value="log4j-crawlers.properties" />
            <sysproperty key="crawler" value="${crawler}" />
            <sysproperty key="hostname" value="${hostname}" />
            <sysproperty key="port" value="${port}" />
            <arg line="-p ${crawler.shell.port} ${crawler.shell.cmd} ${crawler.class} ${crawler.argline}"/>
            <classpath refid="Crawlers.classpath"/>
        </java>
	</target>
	<target name="CrawlerVirtualObject"> 
		<property name="crawler.class" value="net.violet.platform.xmpp.vo.ServiceWatcher"/> 
		<property name="crawler.argline" value="${virtual.object.serial}"/> 
		<antcall target="CrawlerCtl"/> 
        </target> 
	<target name="DaemonJabberXmlRpcManagerPacket">
	        <java classname="net.violet.platform.xmpp.JabberXmlRpcManagerPacket" failonerror="true" fork="yes">
	            <jvmarg line="-Djava.net.preferIPv4Stack=true -mx768m"/>
	            <sysproperty key="log4j.configuration" value="log4j-crawlers.properties" />
	            <sysproperty key="crawler" value="${daemon}" />
	        	<sysproperty key="hostname" value="${hostname}" />
	            <classpath refid="Crawlers.classpath"/>
	            <arg line="sources int rfid asr ptt itmode"/>
	        </java>
	</target>
	<target name="DaemonJabberPlatformManagerPacket">
	        <java classname="net.violet.platform.xmpp.JabberPlatformManagerPacket" failonerror="true" fork="yes">
	            <jvmarg line="-Djava.net.preferIPv4Stack=true -mx768m"/>
	            <sysproperty key="log4j.configuration" value="log4j-crawlers.properties" />
	            <sysproperty key="crawler" value="${daemon}" />
	        	<sysproperty key="hostname" value="${hostname}" />
	            <classpath refid="Crawlers.classpath"/>
	            <arg line="sources int rfid asr ptt itmode"/>
	        </java>
	    </target>
    <target name="DaemonJabberPlatformManagerPacketExt">
        <java classname="net.violet.platform.xmpp.JabberPlatformManagerPacket" failonerror="true" fork="yes">
            <jvmarg line="-Djava.net.preferIPv4Stack=true -mx768m"/>
            <sysproperty key="log4j.configuration" value="log4j-crawlers.properties" />
            <sysproperty key="crawler" value="${daemon}" />
            <sysproperty key="hostname" value="${hostname}" />
            <classpath refid="Crawlers.classpath"/>
            <arg line="sources int rfid asr ptt itmode"/>
        </java>
    </target>
    <target name="DaemonJabberComponentManagerApiPacket">
    	<java classname="net.violet.platform.xmpp.JabberComponentManagerPacket" failonerror="true" fork="yes">
	    <jvmarg line="-Djava.net.preferIPv4Stack=true -mx768m"/>
	    <sysproperty key="log4j.configuration" value="log4j-crawlers.properties" />
	    <sysproperty key="crawler" value="${daemon}" />
	    <sysproperty key="hostname" value="${hostname}" />
	    <classpath refid="Crawlers.classpath"/>
	    <arg line="xmpp.api.violet.net"/>
	</java>
    </target>
	<target name="DaemonJabberComponentManagerAppletPacket">
	    	<java classname="net.violet.platform.xmpp.JabberComponentManagerPacket" failonerror="true" fork="yes">
		    <jvmarg line="-Djava.net.preferIPv4Stack=true -mx768m"/>
		    <sysproperty key="log4j.configuration" value="log4j-crawlers.properties" />
		    <sysproperty key="crawler" value="${daemon}" />
		    <sysproperty key="hostname" value="${hostname}" />
		    <classpath refid="Crawlers.classpath"/>
		    <arg line="xmpp.applet.violet.net"/>
	</java>
	</target>
	<target name="DaemonJabberComponentManagerObjectsPacket">
	    	<java classname="net.violet.platform.xmpp.JabberComponentManagerPacket" failonerror="true" fork="yes">
		    <jvmarg line="-Djava.net.preferIPv4Stack=true -mx768m"/>
		    <sysproperty key="log4j.configuration" value="log4j-crawlers.properties" />
		    <sysproperty key="crawler" value="${daemon}" />
		    <sysproperty key="hostname" value="${hostname}" />
		    <classpath refid="Crawlers.classpath"/>
		    <arg line="xmpp.objects.violet.net"/>
	</java>
    </target>
	<target name="DaemonJabberComponentManagerPlatformPacket">
	    	<java classname="net.violet.platform.xmpp.JabberComponentManagerPacket" failonerror="true" fork="yes">
		    <jvmarg line="-Djava.net.preferIPv4Stack=true -mx768m"/>
		    <sysproperty key="log4j.configuration" value="log4j-crawlers.properties" />
		    <sysproperty key="crawler" value="${daemon}" />
		    <sysproperty key="hostname" value="${hostname}" />
		    <classpath refid="Crawlers.classpath"/>
		    <arg line="xmpp.platform.violet.net"/>
	</java>
    </target>
    <target name="DaemonTTSServer">
        <java classname="net.violet.platform.voice.server.TTSServerImpl" failonerror="true" fork="yes">
            <jvmarg line="-Djava.net.preferIPv4Stack=true -mx1024m"/>
		    <sysproperty key="com.sun.management.jmxremote.port" value="15556" />
            <sysproperty key="com.sun.management.jmxremote.authenticate" value="true" />
            <sysproperty key="com.sun.management.jmxremote.ssl" value="false" />
            <sysproperty key="com.sun.management.jmxremote.password.file" value="/usr/local/tomcat/management/management.passwd" />
            <sysproperty key="com.sun.management.jmxremote.access.file" value="/usr/local/tomcat/management/management.access" />
            <sysproperty key="log4j.configuration" value="log4j-crawlers.properties" />
            <sysproperty key="crawler" value="${daemon}" />
            <sysproperty key="hostname" value="${hostname}" />
            <classpath refid="Crawlers.classpath"/>
            <arg line=""/>
        </java>
    </target>
    <target name="DaemonShell">
        <java classname="net.violet.platform.daemons.shell.CrawlerShell" failonerror="true" fork="yes">
			<fail message="PrÃ©ciser port pour yourkit avec -Dyjport=X" unless="yjport" />
            <jvmarg line="-Djava.net.preferIPv4Stack=true -mx1024m -agentpath:/home/crawler/yjp/bin/linux-x86-32/libyjpagent.so=disablej2ee,noj2ee,tracing,alloc,monitors,usedmem=90,onexit=snapshot,dir=/home/crawler/Snapshots,port=${yjport}"/>
            <sysproperty key="log4j.configuration" value="log4j-crawlers.properties" />
            <sysproperty key="crawler" value="${daemon}-${port}" />
            <sysproperty key="hostname" value="${hostname}" />
            <sysproperty key="port" value="${port}" />
		    <sysproperty key="com.sun.management.jmxremote.port" value="1${port}" />
            <sysproperty key="com.sun.management.jmxremote.authenticate" value="true" />
            <sysproperty key="com.sun.management.jmxremote.ssl" value="false" />
            <sysproperty key="com.sun.management.jmxremote.password.file" value="/usr/local/tomcat/management/management.passwd" />
            <sysproperty key="com.sun.management.jmxremote.access.file" value="/usr/local/tomcat/management/management.access" />
            <classpath refid="Crawlers.classpath"/>
            <arg line="${port}"/>
        </java>
    </target>
	<target name="virtualobject" description="Cible pour lancer un objet virtuel dans un shell" depends="get.hostname">
		<!-- paramÃ¨tre: serial: serial de l'objet -->
		<fail message="PrÃ©ciser le serial de l'objet du crawler avec -Dserial=X" unless="serial" />
		<!-- paramÃ¨tre: port: port du shell -->
		<fail message="PrÃ©ciser le port du shell avec -Dport=X" unless="port" />
		<!-- paramÃ¨tre: command: commande pour le shell -->
		<fail message="PrÃ©ciser la commande avec -Dcommand=X" unless="command" />
		<property name="crawler.shell.cmd" value="${command}" />
		<property name="crawler.shell.port" value="${port}" />
		<property name="virtual.object.serial" value="${serial}" />
		<property name="crawler" value="VirtualObject${port}" />
		<antcall target="CrawlerVirtualObject" />
	</target>
	<target name="startDaemon" description="Cible pour lancer un demon" depends="get.hostname">
		<!-- paramÃ¨tre: daemon: nom du demon -->
		<fail message="PrÃ©ciser le nom du demon avec -Ddaemon=X" unless="daemon" />
    		<property name="port" value="5556"/><!-- valeur par dÃ©faut pour le port -->
		<!-- on dÃ©termine si le fichier du pid est toujours lÃ  -->
		<property name="daemon.pid.path" value="/var/run/crawlers/${daemon}${port}.pid"/>
		<available file="${daemon.pid.path}" property="daemon.pid.present" />
		<fail message="Le demon tourne toujours (?), en tous cas le fichier pid est toujours prÃ©sent (${daemon.pid.path})" if="daemon.pid.present" />
		<!-- Ã©criture du pid -->
		<mkdir dir="/var/run/crawlers/" />
		<exec executable="sh">
			<arg value="-c" />
			<arg value="echo -n $PPID > ${daemon.pid.path}" />
		</exec>
		<!-- lancement du demon -->
		<antcall target="Daemon${daemon}" />
		<!-- suppression du fichier -->
		<delete failonerror="false" file="${daemon.pid.path}"/>
	</target>
	<target name="stopDaemon" description="Cible pour arrÃªter un daemon">
		<!-- paramÃ¨tre: daemon: nom du demon -->
		<fail message="PrÃ©ciser le nom du demon avec -Ddaemon=X" unless="daemon" />
    		<property name="port" value="5556"/><!-- valeur par dÃ©faut pour le port -->
		<!-- on dÃ©termine si le fichier du pid est toujours lÃ  -->
		<property name="daemon.pid.path" value="/var/run/crawlers/${daemon}${port}.pid"/>
		<available file="${daemon.pid.path}" property="daemon.pid.present" />
		<fail message="Le demon ne tourne pas, en tous cas le fichier pid n'est pas lÃ  (${daemon.pid.path})" unless="daemon.pid.present" />
		<!-- lecture du pid -->
		<loadfile srcFile="${daemon.pid.path}" property="daemon.pid" />
		<exec executable="sh">
			<arg value="-c" />
			<arg value="kill ${daemon.pid}" />
		</exec>
		<delete file="${daemon.pid.path}"/>
	</target>
	
    <target name="get.hostname" depends="get.hostname.env,get.hostname.cmd">
    	<echo message="-${hostname}-" />
    </target>

    <target name="get.hostname.env">
    	<property environment="env"/>
	<condition property="hostname" value="${env.HOSTNAME}">
		<isset property="env.HOSTNAME"/>
	</condition>
	<condition property="hostname" value="${env.HOST}">
		<isset property="env.HOST"/>
	</condition>
    </target>

    <target name="get.hostname.cmd" unless="hostname">
    	<exec executable="hostname" outputProperty="hostname" />
    </target>
</project>
